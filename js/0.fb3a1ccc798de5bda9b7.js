(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{909:function(e,t,o){"use strict";(function(e){var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n,a,i=o(231),l=o(913),s=(n=l)&&n.__esModule?n:{default:n},c=o(232);(a=o(9).enterModule)&&a(e);var u,p,_=c.async.someAsync,d=function(e,t){return{count:e.mapArea.count}},f=function(e,t){return{fetchSomeAsyncRequest:function(){e(_())}}},y=(0,i.connect)(d,f)(r=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default),t}())||r;t.default=y,u=o(9).default,p=o(9).leaveModule,u&&(u.register(_,"someAsync","E:/test/EternalNiu/src/MapArea/container.js"),u.register(d,"mapStateToProps","E:/test/EternalNiu/src/MapArea/container.js"),u.register(f,"mapDispatchToProps","E:/test/EternalNiu/src/MapArea/container.js"),u.register(y,"Container","E:/test/EternalNiu/src/MapArea/container.js"),p(e))}).call(this,o(19)(e))},912:function(e,t,o){"use strict";(function(e){var r;function n(e){return 180*e/3.141592653589793}function a(e){for(var t=0,o=0,r=0;r<e.length;r++)t+=e[r][0],o+=e[r][1];var n=t/e.length,a=o/e.length,i={};return i.x=n,i.y=a,i}function i(e,t,o,r){var a=r-t,i=o-e,l=Math.atan2(a,i);return(l=n(l))<0&&(l+=360),l}Object.defineProperty(t,"__esModule",{value:!0}),(r=o(9).enterModule)&&r(e);var l,s,c=function(e){for(var t=[],o=null,r=a(e),n=0,l=e.length;n<l;n++)o=i(r.x,r.y,e[n][0],e[n][1]),t.push({degree:o,latLng:e[n]});t.sort(function(e,t){return t.degree-e.degree});for(var s=[],c=0;c<t.length;c++)s.push(t[c].latLng);return s},u=c;t.default=u,l=o(9).default,s=o(9).leaveModule,l&&(l.register(n,"toDegrees","E:/test/EternalNiu/src/MapArea/test.js"),l.register(a,"calcCenterPoint","E:/test/EternalNiu/src/MapArea/test.js"),l.register(i,"getAngle1","E:/test/EternalNiu/src/MapArea/test.js"),l.register(c,"points","E:/test/EternalNiu/src/MapArea/test.js"),l.register(u,"default","E:/test/EternalNiu/src/MapArea/test.js"),s(e))}).call(this,o(19)(e))},913:function(module,exports,__webpack_require__){"use strict";(function(module){Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _input=__webpack_require__(173),_input2=_interopRequireDefault(_input),_button=__webpack_require__(63),_button2=_interopRequireDefault(_button),_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},_createClass=function(){function e(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,o,r){return o&&e(t.prototype,o),r&&e(t,r),t}}(),_dec,_class,_class2,_temp;__webpack_require__(234),__webpack_require__(172);var _react=__webpack_require__(1),_react2=_interopRequireDefault(_react),_propTypes=__webpack_require__(0),_reactAmapBinding=__webpack_require__(462),_reactHotLoader=__webpack_require__(9),_test=__webpack_require__(912),_test2=_interopRequireDefault(_test),enterModule;function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}enterModule=__webpack_require__(9).enterModule,enterModule&&enterModule(module);var AMAP_KEY="964ffab2ef1edca12c97f817342c4315",AMAP_STYLE="amap://styles/9c109cbf2e0f55701c6ec4e5c90c56ba",polyEditor=void 0,List=(_dec=(0,_reactHotLoader.hot)(module),_dec((_temp=_class2=function(_React$Component){function List(e){_classCallCheck(this,List);var t=_possibleConstructorReturn(this,(List.__proto__||Object.getPrototypeOf(List)).call(this,e));return t.state={bounds:void 0,data:[[116.398258,39.9046],[116.382122,39.901176],[116.368904,39.913423],[116.387271,39.912501]],data1:[[116.398258,39.9046],[116.387271,39.912501],[116.382122,39.901176],[116.368904,39.913423]],data2:[[116.376907,39.910967],[116.384911,39.919505],[116.40109,39.919728],[116.411132,39.911408],[116.412076,39.899135],[116.402292,39.892353],[116.3874,39.892518],[116.376971,39.899267]],otherData:[[116.390233,39.906602],[116.400962,39.898589],[116.400661,39.906667],[116.395254,39.908668],[116.395769,39.894855],[116.390147,39.898049]],newData:[[116.368904,39.913423],[116.382122,39.901176],[116.387271,39.912501],[116.398258,39.9046]]},t}return _inherits(List,_React$Component),_createClass(List,[{key:"onMapComplete",value:function(e){this.map=e}},{key:"onPolygonComplete",value:function(e,t,o){this.polygon1=o}},{key:"onOtherPolygonComplete",value:function(e,t,o){this.polygon2=o}},{key:"cratePoly",value:function(){var e=this,t=this.map;t.plugin(["AMap.MouseTool"],function(){var o=new window.AMap.MouseTool(t);o.polygon({fillColor:"red",strokeColor:"green",fillOpacity:"0.5"}),o.on("draw",function(t){var r=t.obj.getPath().map(function(e){return[e.lng,e.lat]});e.setState(_extends({},e.state,{data:r})),o.close(!0)})})}},{key:"editPolygon",value:function(){var e=this,t=this.map;t.plugin(["AMap.PolyEditor"],function(){(polyEditor=new window.AMap.PolyEditor(t,e.polygon1)).open()}),this.polyEditor=polyEditor}},{key:"savePolygon",value:function(){if(polyEditor){var e=polyEditor.aq[0].map(function(e){return[e.lng,e.lat]});this.setState(_extends({},this.state,{data:e})),polyEditor.close()}}},{key:"deletePolygon",value:function(){polyEditor&&polyEditor.close(),this.setState(_extends({},this.state,{data:[]}))}},{key:"compare",value:function(){var e=this.polygon1.getPath(),t=this.polygon2.getPath(),o=window.AMap.GeometryUtil.isRingInRing(t,e),r=window.AMap.GeometryUtil.doesRingRingIntersect(t,e),n=window.AMap.GeometryUtil.ringRingClip(t,e),a=parseInt(window.AMap.GeometryUtil.ringArea(n)),i="两圈关系：在大圈外";o?i="两圈关系：在大圈内":r&&(i="两圈关系：两圈相交, 交叉区域面积为"+a+"平方米"),console.log(i)}},{key:"addressInputChange",value:function(e){window.AMap.plugin("AMap.Geocoder",function(){new window.AMap.Geocoder({city:"南京"}).getLocation("南京市江宁区金轮第一城",function(e,t){"complete"===e&&"OK"===t.info&&console.log(t)})})}},{key:"render",value:function(){var e=this.state,t=e.bounds,o=e.data,r=e.otherData,n=e.data1,a=(0,_test2.default)(r);return console.log(a),_react2.default.createElement("div",{style:{width:"100%",height:"100%"}},_react2.default.createElement(_button2.default,{onClick:this.cratePoly.bind(this)},"绘制"),_react2.default.createElement(_button2.default,{onClick:this.editPolygon.bind(this)},"编辑"),_react2.default.createElement(_button2.default,{onClick:this.savePolygon.bind(this)},"保存"),_react2.default.createElement(_button2.default,{onClick:this.deletePolygon.bind(this)},"清除"),_react2.default.createElement(_button2.default,{onClick:this.compare.bind(this)},"对比"),_react2.default.createElement(_input2.default,{placeholder:"请输入详细地址",onChange:this.addressInputChange.bind(this)}),_react2.default.createElement(_reactAmapBinding.AMap,{appKey:AMAP_KEY,bounds:t,version:"1.3.0",defaultCursor:"pointer",mapStyle:AMAP_STYLE,center:[116.3972443,39.91397024],onComplete:this.onMapComplete.bind(this),zoom:13},_react2.default.createElement(_reactAmapBinding.Polygon,{path:o,fillColor:"red",strokeColor:"green",fillOpacity:.5,onComplete:this.onPolygonComplete.bind(this,1)}),n.map(function(e,t){return _react2.default.createElement(_reactAmapBinding.Marker,{key:t,offset:[-10,-30],position:e})}),_react2.default.createElement(_reactAmapBinding.Polygon,{path:a,fillColor:"red",strokeColor:"green",fillOpacity:.5,onComplete:this.onOtherPolygonComplete.bind(this,2)})))}},{key:"__reactstandin__regenerateByEval",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}]),List}(_react2.default.Component),_class2.propTypes={classes:_propTypes.object,count:_propTypes.number,fetchSomeAsyncRequest:_propTypes.func},_class=_temp))||_class),reactHotLoader,leaveModule;exports.default=List,reactHotLoader=__webpack_require__(9).default,leaveModule=__webpack_require__(9).leaveModule,reactHotLoader&&(reactHotLoader.register(AMAP_KEY,"AMAP_KEY","E:/test/EternalNiu/src/MapArea/component.js"),reactHotLoader.register(AMAP_STYLE,"AMAP_STYLE","E:/test/EternalNiu/src/MapArea/component.js"),reactHotLoader.register(polyEditor,"polyEditor","E:/test/EternalNiu/src/MapArea/component.js"),reactHotLoader.register(List,"List","E:/test/EternalNiu/src/MapArea/component.js"),leaveModule(module))}).call(this,__webpack_require__(19)(module))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,