(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{910:function(e,t,n){"use strict";(function(e){var o;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,i,a=n(231),l=n(915),s=(r=l)&&r.__esModule?r:{default:r},u=n(233);(i=n(9).enterModule)&&i(e);var c,p,d=u.async.someAsync,f=function(e,t){return{count:e.list.count}},_=function(e,t){return{fetchSomeAsyncRequest:function(){e(d())}}},h=(0,a.connect)(f,_)(o=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,s.default),t}())||o;t.default=h,c=n(9).default,p=n(9).leaveModule,c&&(c.register(d,"someAsync","E:/test/EternalNiu/src/List/container.js"),c.register(f,"mapStateToProps","E:/test/EternalNiu/src/List/container.js"),c.register(_,"mapDispatchToProps","E:/test/EternalNiu/src/List/container.js"),c.register(h,"Container","E:/test/EternalNiu/src/List/container.js"),p(e))}).call(this,n(19)(e))},911:function(e,t,n){(t=e.exports=n(30)(!1)).push([e.i,".marker_35Uv5 {\n  width: 18px;\n  height: 18px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 12px;\n  border: 1px solid;\n  border-radius: 50%;\n}\n.buttonGroup_T6_yY {\n  position: absolute;\n  top: 90px;\n  right: 20px;\n  z-index: 999;\n}\n.buttonGroup2_oDrIQ {\n  position: absolute;\n  top: 122px;\n  right: 83px;\n  z-index: 999;\n}\n.buttonGroup2_oDrIQ .ant-checkbox-group-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 0px;\n  border: 1px solid #ccc;\n  padding: 4px 8px;\n  border-radius: 3px;\n}\n.buttonGroup2_oDrIQ .ant-checkbox-group {\n  display: flex;\n  flex-direction: column;\n  background: white;\n}\n.buttonGroup2_oDrIQ .ant-checkbox-group-item > span:last-child {\n  width: 18px;\n  height: 18px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid;\n  border-radius: 50%;\n  font-size: 12px;\n}\n.buttonGroup3_2PIYH {\n  position: absolute;\n  top: 122px;\n  right: 146px;\n  display: flex;\n  flex-direction: column;\n  z-index: 999;\n}\n",""]),t.locals={marker:"marker_35Uv5",buttonGroup:"buttonGroup_T6_yY",buttonGroup2:"buttonGroup2_oDrIQ",buttonGroup3:"buttonGroup3_2PIYH"}},914:function(e,t,n){var o=n(911);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0},i=n(29)(o,r);o.locals&&(e.exports=o.locals),e.hot.accept(911,function(t){!function(){var t=n(911);if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,o=0;for(n in e){if(!t||e[n]!==t[n])return!1;o++}for(n in t)o--;return 0===o}(o.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");i(t)}()}),e.hot.dispose(function(){i()})},915:function(module,exports,__webpack_require__){"use strict";(function(module){Object.defineProperty(exports,"__esModule",{value:!0});var _message2=__webpack_require__(463),_message3=_interopRequireDefault(_message2),_checkbox=__webpack_require__(464),_checkbox2=_interopRequireDefault(_checkbox),_button=__webpack_require__(63),_button2=_interopRequireDefault(_button),_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}();__webpack_require__(466),__webpack_require__(465),__webpack_require__(172);var _react=__webpack_require__(1),_react2=_interopRequireDefault(_react),_platform=__webpack_require__(914),_platform2=_interopRequireDefault(_platform),_reactAmapBinding=__webpack_require__(462),enterModule;function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}enterModule=__webpack_require__(9).enterModule,enterModule&&enterModule(module);var ButtonGroup=_button2.default.Group,CheckboxGroup=_checkbox2.default.Group,AMAP_KEY="964ffab2ef1edca12c97f817342c4315",AMAP_STYLE="amap://styles/9c109cbf2e0f55701c6ec4e5c90c56ba",polyEditor=void 0,editIndex=void 0,List=function(_Component){function List(e){_classCallCheck(this,List);var t=_possibleConstructorReturn(this,(List.__proto__||Object.getPrototypeOf(List)).call(this,e));return t.polygon={},t.otherPolygon=[],t.state={bound:void 0,checkedValues:[],isShowClearList:!1,isShowEditList:!1,milkArea:[[[120.189268,30.205297],[120.1915,30.201588],[120.198796,30.205297],[120.196821,30.208635],[120.189268,30.205297]],[[120.193989,30.197285],[120.201113,30.20092],[120.202572,30.198027],[120.202658,30.196098],[120.202658,30.19187],[120.195276,30.191202],[120.193989,30.197285]],[[120.206434,30.209154],[120.208838,30.205074],[120.216648,30.209228],[120.213301,30.213827],[120.210812,30.216571],[120.20858,30.214049],[120.204203,30.211973],[120.206434,30.209154]],[[120.209954,30.198695],[120.218022,30.199956],[120.218107,30.194466],[120.228407,30.195134],[120.229094,30.195208],[120.228836,30.19187],[120.218622,30.192167],[120.218365,30.190089],[120.210983,30.189644],[120.209954,30.198695]]],otherMilkArea:[[[120.224201,30.213382],[120.232269,30.217164],[120.235016,30.211527],[120.234501,30.206558],[120.229094,30.206187],[120.224201,30.213382]],[[120.234415,30.200475],[120.234673,30.201291],[120.240681,30.201069],[120.241797,30.194318],[120.234587,30.194689],[120.234415,30.200475]],[[120.235188,30.19187],[120.233814,30.182967],[120.244286,30.18267],[120.243685,30.19187],[120.235703,30.191499],[120.235188,30.19187]],[[120.210683,30.181557],[120.211541,30.176363],[120.231626,30.175325],[120.23154,30.183115],[120.210683,30.181557]]],marker:[[120.243548,30.199871],[120.249148,30.199816],[120.249256,30.194419],[120.243569,30.194511],[120.243548,30.199871]]},t}return _inherits(List,_Component),_createClass(List,[{key:"componentDidUpdate",value:function(e){var t=this;setTimeout(function(){t.map&&t.map.setFitView()},500)}},{key:"cratePoly",value:function(){var e=this;this.map.plugin(["AMap.MouseTool"],function(){var t=new window.AMap.MouseTool(e.map);t.polygon({fillColor:"#8dc5f3",strokeColor:"#4f7de3",fillOpacity:"0.3"}),t.on("draw",function(n){var o=n.obj.getPath().map(function(e){return[e.lng,e.lat]});e.setState(_extends({},e.state,{milkArea:[].concat(_toConsumableArray(e.state.milkArea),[o])})),t.close(!0)})})}},{key:"countPolygonCenter",value:function(e){return e.map(function(e){var t=e.map(function(e){return e[0]||e.lng}),n=e.map(function(e){return e[1]||e.lat});return[.5*(Math.min.apply(null,t)+Math.max.apply(null,t)),.5*(Math.min.apply(null,n)+Math.max.apply(null,n))]})}},{key:"clearPolygon",value:function(){editIndex=null;var e=this.state,t=e.checkedValues,n=e.milkArea;if(polyEditor){var o=polyEditor.aq[0].map(function(e){return[e.lng,e.lat]});this.setState(_extends({},this.state,{milkArea:this.state.milkArea.map(function(e,t){return t===editIndex?o:e})})),polyEditor.close()}console.log(t);var r=n;t.length>0&&t.forEach(function(e){r=r.filter(function(t,n){return n+1!==+e})}),console.log(r),this.setState(_extends({},this.state,{milkArea:r,isShowClearList:!1}))}},{key:"editPolygon",value:function(e){var t=this;if(editIndex=e,polyEditor){var n=polyEditor.aq[0].map(function(e){return[e.lng,e.lat]});this.setState(_extends({},this.state,{milkArea:this.state.milkArea.map(function(e,t){return t===editIndex?n:e})})),polyEditor.close()}var o=this.polygon[e];this.polygonIndex=e,this.map.plugin(["AMap.PolyEditor"],function(){(polyEditor=new window.AMap.PolyEditor(t.map,o)).open()}),this.polyEditor=polyEditor}},{key:"onMapComplete",value:function(e){this.map=e,this.map.setFitView()}},{key:"savePolygon",value:function(){var e=this,t=this.state.milkArea;if(polyEditor){var n=void 0;if(this.otherPolygon.map(function(t){n=e.compare(t,e.polygon[editIndex])}),editIndex=null,!n)return;var o=polyEditor.aq[0].map(function(e){return[e.lng,e.lat]});this.setState(_extends({},this.state,{milkArea:t.map(function(e,t){return t===editIndex?o:e})})),polyEditor.close(),this.hideList(),polyEditor=null}}},{key:"compare",value:function(e,t){var n=e.getPath(),o=t.getPath(),r=window.AMap.GeometryUtil.isRingInRing(o,n),i=window.AMap.GeometryUtil.doesRingRingIntersect(o,n),a=window.AMap.GeometryUtil.ringRingClip(o,n),l=parseInt(window.AMap.GeometryUtil.ringArea(a)),s=!0;return r?(_message3.default.error("两圈关系：在大圈内"),s=!1):i&&(_message3.default.error("两圈关系：两圈相交, 交叉区域面积为"+l+"平方米"),s=!1),s}},{key:"onPolygonComplete",value:function(e,t,n){this.polygon[e]=n}},{key:"otherPolygonComplete",value:function(e,t,n){this.otherPolygon.push(n)}},{key:"toggleClearList",value:function(){0!==this.state.milkArea.length&&this.setState({isShowClearList:!this.state.isShowClearList,isShowEditList:!1})}},{key:"toggleEditList",value:function(){0!==this.state.milkArea.length&&this.setState({isShowClearList:!1,isShowEditList:!this.state.isShowEditList})}},{key:"hideList",value:function(){this.setState({isShowClearList:!1,isShowEditList:!1})}},{key:"onCheckboxChange",value:function(e){this.setState({checkedValues:e})}},{key:"render",value:function(){var e=this,t=this.state,n=t.bound,o=t.milkArea,r=t.otherMilkArea,i=t.isShowEditList,a=t.isShowClearList,l=t.marker,s=this.countPolygonCenter(o),u=Array.from({length:s.length}).map(function(e,t){return""+(t+1)}),c=100*(1-160/window.innerHeight);return _react2.default.createElement("div",{style:{width:"100%",height:c+"vh",position:"reelative"}},_react2.default.createElement(ButtonGroup,{className:_platform2.default.buttonGroup},_react2.default.createElement(_button2.default,{onClick:this.cratePoly.bind(this)},"绘制"),_react2.default.createElement(_button2.default,{onClick:this.toggleEditList.bind(this)},"编辑"),_react2.default.createElement(_button2.default,{onClick:this.toggleClearList.bind(this)},"清除"),_react2.default.createElement(_button2.default,{onClick:this.savePolygon.bind(this)},"保存")),a&&_react2.default.createElement("div",{className:_platform2.default.buttonGroup2},_react2.default.createElement(CheckboxGroup,{options:u,onChange:this.onCheckboxChange.bind(this)}),_react2.default.createElement(_button2.default,{onClick:this.clearPolygon.bind(this),type:"primary"},"确定")),i&&_react2.default.createElement("div",{className:_platform2.default.buttonGroup3},u.map(function(t){return _react2.default.createElement(_button2.default,{onClick:e.editPolygon.bind(e,t),key:t},t)})),_react2.default.createElement(_reactAmapBinding.AMap,{appKey:AMAP_KEY,bounds:n,defaultCursor:"pointer",mapStyle:AMAP_STYLE,onComplete:this.onMapComplete.bind(this),onClick:this.hideList.bind(this),zoom:13},o.map(function(t,n){return _react2.default.createElement(_reactAmapBinding.Polygon,{key:n,fillColor:"#8dc5f3",strokeColor:"#4f7de3",fillOpacity:"0.3",path:t,onComplete:e.onPolygonComplete.bind(e,n+1)})}),s.map(function(e,t){return _react2.default.createElement(_reactAmapBinding.Marker,{content:"<div class='"+_platform2.default.marker+"'>\n                    "+(t+1)+"\n                  </div>",key:t,offset:[-10,-10],position:e})}),r.map(function(t,n){return _react2.default.createElement(_reactAmapBinding.Polygon,{key:n,path:t,strokeColor:"#4285F4",fillColor:"black",fillOpacity:"0.3",bubble:!0,onComplete:e.otherPolygonComplete.bind(e,n+1)})}),l.map(function(e,t){return _react2.default.createElement(_reactAmapBinding.Marker,{key:t,position:e,offset:[-10,-30]})})))}},{key:"__reactstandin__regenerateByEval",value:function __reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}]),List}(_react.Component),_default=List,reactHotLoader,leaveModule;exports.default=_default,reactHotLoader=__webpack_require__(9).default,leaveModule=__webpack_require__(9).leaveModule,reactHotLoader&&(reactHotLoader.register(ButtonGroup,"ButtonGroup","E:/test/EternalNiu/src/List/component.js"),reactHotLoader.register(CheckboxGroup,"CheckboxGroup","E:/test/EternalNiu/src/List/component.js"),reactHotLoader.register(AMAP_KEY,"AMAP_KEY","E:/test/EternalNiu/src/List/component.js"),reactHotLoader.register(AMAP_STYLE,"AMAP_STYLE","E:/test/EternalNiu/src/List/component.js"),reactHotLoader.register(polyEditor,"polyEditor","E:/test/EternalNiu/src/List/component.js"),reactHotLoader.register(editIndex,"editIndex","E:/test/EternalNiu/src/List/component.js"),reactHotLoader.register(List,"List","E:/test/EternalNiu/src/List/component.js"),reactHotLoader.register(_default,"default","E:/test/EternalNiu/src/List/component.js"),leaveModule(module))}).call(this,__webpack_require__(19)(module))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,